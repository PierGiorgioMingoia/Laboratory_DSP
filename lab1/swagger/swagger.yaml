swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "task"
  description: "Operation about tasks"
  
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /login:
    post:
      tags:
      - "user"
      summary: "User log into the server"
      description: ""
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object"
        required: true
        schema:
          $ref: "#/definitions/user_pass"
      responses:
        "401":
          description: "Invalid input"
  /tasks:
    get:
      tags:
      - task
      produces:
      - "application/json"
      responses:
        200:
          description: "Tutto giusto tutto legistimo"
          schema:
            type: array
            items:
              $ref: '#/definitions/task'
    post:
      tags:
      - task
      summary: "add new task"
      description: ""
      parameters:
      - in: "body"
        name : "body"
        description: ""
        required: true
        schema:
         $ref: "#/definitions/new_task"
      responses:
        200:
          description: OK
    
  /tasks/{id}:
    get:
      tags:
      - task
      summary: "sas"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "as"
      description: "sad"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/task'
    delete:
      tags:
      - task
      summary: "asd"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "asd"
      description: "as"
      responses:
        200:
          description: OK
    put:
      tags:
      - task
      summary: ""
      parameters: 
        - in: path
          name: id
          type: integer
          required: true
          description: "asd"    
        - in: "body"
          name: "body"
          description: "update task obj"
          required: true
          schema:
            $ref: '#/definitions/task'
      description: ""
      responses:
        200:
          description: OK
  /tasks/user:
    get:
      tags:
      - task
      summary: ""
      description: ""
      responses:
        200:
          description: "Tutto giusto tutto legistimo"
          schema:
            type: array
            items:
              $ref: '#/definitions/task'
definitions:
  user:
    type: "object"
    required:
    - "name"
    - "id"
    - "email"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
        minLength: 6
  task:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      important:
        type: boolean
        default: false
      private:
        type: boolean
        default: true
      projects:
        type: array
        items:
          $ref: '#/definitions/project_name'
      date:
        type: string
        format: date
        pattern: '20[2-9]([0-9]-[0-9]{2}-[0-9]{2})'
      completed:
        type: boolean
        default: false
      assignedTo:
        type: array
        items:
          type: integer
    required:
      - id
      - description
  project_name:
    type: string
    enum:
    - Personal
    - WA1_Project
    - WA2_Project
    - DSP_Project
    
  new_task:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      important:
        type: boolean
        default: false
      private:
        type: boolean
        default: true
      projects:
        type: array
        items:
          $ref: '#/definitions/project_name'
      date:
        type: string
        format: date
        pattern: '20[2-9]([0-9]-[0-9]{2}-[0-9]{2})'
      completed:
        type: boolean
        default: false
      assignedTo:
        type: array
        items:
          type: integer
    required:
      - id
      - description
  user_pass:
    type: object
    properties:
      username: 
        type: string
      password:
        type: string
    required: 
      - username
      - string
    
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"